#!/usr/bin/env perl

use strict;
use warnings;
use Carp;
use Getopt::Long;
use FindBin qw($Bin);
use lib (-d "$Bin/../lib/perl5" ? "$Bin/../lib/perl5":"$Bin/../lib");
use npg_pipeline::product::heron::majora qw/ get_table_info_for_id_run
                                              get_majora_data
                                              json_to_structure
                                              update_metadata
                                              get_ids_missing_data
                                              get_ids_from_date/;
use npg_tracking::Schema;
use WTSI::DNAP::Warehouse::Schema;

our $VERSION = '0';

my $schema =npg_tracking::Schema->connect();
my $mlwh_schema=WTSI::DNAP::Warehouse::Schema->connect();

my @id_runs;
my $days;
GetOptions 'id_run=i' => \@id_runs, #numeric
'days=i' =>\$days,
or croak "Error in command line arguments\n";
if ((not @id_runs) and (not $days)) {
  #gets a list of id_runs missing data
  @id_runs = get_ids_missing_data($mlwh_schema);
}elsif((not @id_runs) and $days) {
  #gets list of id_runs missing data from (current time - days) up to current time
  @id_runs = get_ids_from_date($mlwh_schema,$days)
}elsif(@id_runs and $days){
  croak "Error cannot set both id_runs and days\n";
};

for my $id_run (@id_runs){
  my ($fn,$rs) = get_table_info_for_id_run($id_run,$schema,$mlwh_schema);

  my $json_string = get_majora_data($fn);

  my %ds = json_to_structure($json_string,$fn);
  my $ds_ref = \%ds;
  update_metadata($rs,$ds_ref);
};


