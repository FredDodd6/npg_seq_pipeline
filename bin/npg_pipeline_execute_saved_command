#!/usr/bin/env perl

use strict;
use warnings;
use FindBin qw($Bin);
use lib ( -d "$Bin/../lib/perl5" ? "$Bin/../lib/perl5" : "$Bin/../lib" );
use Carp;
use Getopt::Long;
use Perl6::Slurp;
use JSON qw(from_json);
use English qw(-no_match_vars);

our $VERSION = '0';

my $opts = {};
GetOptions($opts, qw{path=s function_name=s});

if (!$opts->{'path'}) {
  croak 'Path required';
}
if (!$opts->{'function_name'}) {
  croak 'Function name required';
}
my $path = $opts->{'path'};
my $fn   = $opts->{'function_name'};

my $job_id = $ENV{'LSB_JOBID'};
if (!$job_id) {
  croak 'LSB_JOBID is not defined';
}
my $job_index = $ENV{'LSB_JOBINDEX'};
if (!$job_index) {
  carp 'LSB_JOBINDEX is not defined';
}

my $description = "function $fn, LSF job id $job_id";

my $h = from_json(slurp $path);
my $command = $h->{$fn}->{$job_id};
if ($job_index) {
  $description .= ", array index $job_index";
  $command = $command->{$job_index};
}

if (!$command) {
  croak "Command is not defined for $description in file $path";
}

carp "Will execute $command for $description";

exec $command or croak "Could not execute command: $CHILD_ERROR";

0;

__END__

=head1 NAME

npg_pipeline_execute_saved_command

=head1 SYNOPSIS

  bin/npg_pipeline_execute_saved_command --path foo --function_name fn

=head1 DESCRIPTION

A helper script for indirect execution of commands under LSF. The script
will be executed by an LSF job. The script extracts a command from a
file given by the --path attribute for a function given by the
--function_name attribute. The scripts uses LSB_JOBID and LSB_JOBINDEX
environment variables to find an entry for an LSF job the script is
running under.

Exit with error if LSB_JOBID value is not defined or the entry
for the given function for this LSB_JOBID and, optionally, LSB_JOBINDEX
does not exist.

If the command is found it is executed. The script does not wait for
the command to return. The script exits with an error if the shell fails
to start the command.

=head1 USAGE

See DESCRIPTION

=head1 REQUIRED ARGUMENTS

path
function_name

=head1 OPTIONS

No additional optional arguments

=head1 EXIT STATUS

0 if the command extracted and started executing successfully

=head1 SUBROUTINES/METHODS

=head1 DIAGNOSTICS

=head1 CONFIGURATION

=head1 DEPENDENCIES

=over

=item strict

=item warnings

=item lib

=item FindBin

=item Carp

=item Getopt::Long

=item Perl6::Slurp

=item JSON

=item English

=back

=head1 INCOMPATIBILITIES

=head1 BUGS AND LIMITATIONS

=head1 AUTHOR

Marina Gourtovaia

=head1 LICENSE AND COPYRIGHT

Copyright (C) 2018 Genome Research Limited

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
